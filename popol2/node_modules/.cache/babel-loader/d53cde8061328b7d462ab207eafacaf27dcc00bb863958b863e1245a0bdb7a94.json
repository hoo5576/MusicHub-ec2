{"ast":null,"code":"import _slicedToArray from\"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useEffect}from\"react\";import{CssBaseline,Box,Grid,Typography,CircularProgress}from\"@mui/material\";import{styled}from\"@mui/system\";import{NavLink,useNavigate}from\"react-router-dom\";import PlayArrowIcon from\"@mui/icons-material/PlayArrow\";import Footer from\"./Footer\";import axios from\"axios\";import{getCookie,removeCookie}from\"../cookie\";import{API_URL}from\"../config/contansts\";import useAsync from\"../customHook/useAsync\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainContent=styled(\"div\")({padding:\"2vw\"});var PlaylistItem=styled(Box)({borderRadius:\"8px\",marginBottom:\"20px\",position:\"relative\",\"&:hover .play-icon\":{opacity:1,cursor:\"pointer\",color:\"red\"},\"&:hover img\":{opacity:0.8,cursor:\"pointer\"}});var PlaylistImage=styled(\"img\")({width:\"20%\",height:\"10vh\",transition:\"opacity 0.3s ease\",marginRight:\"1vw\"});var PlayIcon=styled(PlayArrowIcon)({position:\"absolute\",bottom:\"5.5%\",left:\"9.5%\",transform:\"translate(-50%, -50%)\",opacity:0,transition:\"opacity 0.3s ease\"});//전체곡 조회함수\nvar getMusics=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(limit){var res,res1,res2,allResData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(API_URL,\"/api/musics/kind?kind=POP&limit=15\"));case 2:res=_context.sent;_context.next=5;return axios.get(\"\".concat(API_URL,\"/api/musics/kind?kind=\\uD55C\\uAD6D&limit=15\"));case 5:res1=_context.sent;_context.next=8;return axios.get(\"\".concat(API_URL,\"/api/musics/kind?kind=\\uC77C\\uBCF8&limit=15\"));case 8:res2=_context.sent;console.log(\"res.data:\",res.data);allResData=[].concat(_toConsumableArray(res.data),_toConsumableArray(res1.data),_toConsumableArray(res2.data));console.log(\"allResData:\",allResData);return _context.abrupt(\"return\",allResData);case 13:case\"end\":return _context.stop();}},_callee);}));return function getMusics(_x){return _ref.apply(this,arguments);};}();var Chartmusic=function Chartmusic(props){var navigate=useNavigate();// 페이지가 로드될 때 실행되는 useEffect hook.\nuseEffect(function(){// 사용자의 accessToken을 쿠키에서 가져옴\nvar token=getCookie(\"accessToken\");// 토큰이 존재하는 경우, 서버에서 토큰 유효성을 검증함\nvar verify=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(token!=null)){_context2.next=16;break;}_context2.prev=1;_context2.next=4;return axios.post(\"\".concat(API_URL,\"/api/verify\"),null,{headers:{Authorization:\"Bearer \"+token}});case 4:response=_context2.sent;// 서버 응답이 OK일 경우 (토큰이 유효한 경우)\nif(response.statusText===\"OK\"){// 토큰이 유효하면 아무 작업도 수행하지 않음\n// 사용자를 현재 페이지에 둠\n}_context2.next=14;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);// 서버 응답이 OK가 아닐 경우 (토큰이 유효하지 않은 경우)\n// 에러 메시지를 콘솔에 기록\nconsole.log(_context2.t0);// 경고창을 띄우고, 쿠키에 저장된 토큰을 제거함\nalert(\"다시 로그인 해주세요\");removeCookie(\"accessToken\");// 사용자를 로그인 페이지로 리다이렉트함\nnavigate(\"/\");case 14:_context2.next=18;break;case 16:// 토큰이 없는 경우 (로그인되지 않은 사용자)\n// 경고창을 띄우고, 사용자를 로그인 페이지로 리다이렉트함\nalert(\"다시 로그인 해주세요\");navigate(\"/\");case 18:case\"end\":return _context2.stop();}},_callee2,null,[[1,8]]);}));return function verify(){return _ref2.apply(this,arguments);};}();// verify 함수 실행 (페이지가 로드될 때마다 실행됨)\nverify();},[]);// useEffect의 의존성 배열이 빈 배열이므로 한 번만 실행됨\n// 특정 음악 장르에 해당하는 음악만 필터링하여 반환하는 함수\nvar getFilteredMusics=function getFilteredMusics(kinds){console.log(\"kind: \",kinds);var arr=musics.filter(function(music){return kinds.includes(music.kind);});console.log(\"arr: \",arr);// 기본적으로는 전체 차트를 보여줌\nreturn arr;};// useAsync 커스텀 훅을 사용하여 음악 데이터를 비동기적으로 가져오는 로직\nvar _useAsync=useAsync(getMusics,[]),_useAsync2=_slicedToArray(_useAsync,1),state=_useAsync2[0];// getMusics 함수를 사용하여 데이터를 비동기적으로 가져옴\nvar loading=state.loading,musics=state.data,error=state.error;// state 객체에서 loading, musics, error 값을 구조 분해\n// 로딩 중일 때는 로딩 메시지를 표시\nif(loading){return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",padding:\"20px\",color:\"white\",backgroundColor:\"#000\",height:\"100vh\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"}),/*#__PURE__*/_jsx(CircularProgress,{style:{marginTop:\"10px\"}})]});}// 에러 발생 시 에러 메시지를 표시\nif(error)return/*#__PURE__*/_jsx(\"div\",{children:\"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"});// musics가 존재하지 않는 경우 로딩 메시지를 표시\nif(!musics){return/*#__PURE__*/_jsx(\"div\",{children:\"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4.\"});}return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",background:\"black\"},children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsxs(MainContent,{style:{color:\"white\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{style:{paddingBottom:\"1vw\",color:\"llightseagreen\"},children:\"\\uCC28\\uD2B8\"}),/*#__PURE__*/_jsx(\"h2\",{style:{paddingBottom:\"1vw\",color:\"lightseagreen\"},children:\"K-POP TOP 15\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:1,children:getFilteredMusics([\"한국-발라드\",\"한국-힙합\",\"한국-트로트\",\"한국-동요\",\"한국-아이돌\"]).map(function(music){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(PlaylistItem,{style:{display:\"flex\",alignItems:\"center\",color:\"white\"},children:[/*#__PURE__*/_jsx(PlaylistImage,{src:\"\".concat(API_URL,\"/api\").concat(music.imageUrl),alt:music.name,onClick:function onClick(){props.onMusic(music);}}),/*#__PURE__*/_jsx(PlayIcon,{className:\"play-icon\",fontSize:\"large\",onClick:function onClick(){props.onMusic(music);}}),/*#__PURE__*/_jsx(NavLink,{to:\"/login-main/detail\",state:{music:music},style:{color:\"white\"},children:/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"550\",fontSize:\"22px\"},children:music.name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"300\"},children:music.singer})]})})]})},music.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{paddingTop:\"2vw\"},children:[/*#__PURE__*/_jsx(\"h2\",{style:{paddingBottom:\"1vw\",color:\"lightseagreen\"},children:\"BILLBOARD TOP 15\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:1,children:getFilteredMusics([\"POP-솔로\",\"POP-힙합\",\"POP-락\",\"POP-OST\",\"POP-밴드\"]).map(function(music){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(PlaylistItem,{style:{display:\"flex\",alignItems:\"center\",color:\"white\"},children:[/*#__PURE__*/_jsx(PlaylistImage,{src:\"\".concat(API_URL,\"/api\").concat(music.imageUrl),alt:music.name,onClick:function onClick(){props.onMusic(music);}}),/*#__PURE__*/_jsx(PlayIcon,{className:\"play-icon\",fontSize:\"large\",onClick:function onClick(){props.onMusic(music);}}),/*#__PURE__*/_jsx(NavLink,{to:\"/login-main/detail\",state:{music:music},style:{color:\"white\"},children:/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"550\",fontSize:\"22px\"},children:music.name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"300\"},children:music.singer})]})})]})},music.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{paddingTop:\"2vw\"},children:[/*#__PURE__*/_jsx(\"h2\",{style:{paddingBottom:\"1vw\",color:\"lightseagreen\"},children:\"J-POP TOP 15\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:1,children:getFilteredMusics([\"일본-아이돌\",\"일본-애니\",\"일본-가요\",\"일본-락\"]).map(function(music){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(PlaylistItem,{style:{display:\"flex\",alignItems:\"center\",color:\"white\"},children:[/*#__PURE__*/_jsx(PlaylistImage,{src:\"\".concat(API_URL,\"/api\").concat(music.imageUrl),alt:music.name,onClick:function onClick(){props.onMusic(music);}}),/*#__PURE__*/_jsx(PlayIcon,{className:\"play-icon\",fontSize:\"large\",onClick:function onClick(){props.onMusic(music);}}),/*#__PURE__*/_jsx(NavLink,{to:\"/login-main/detail\",state:{music:music},style:{color:\"white\"},children:/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"550\",fontSize:\"22px\"},children:music.name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"300\"},children:music.singer})]})})]})},music.id);})})]}),/*#__PURE__*/_jsx(Footer,{})]})]});};export default Chartmusic;","map":{"version":3,"names":["React","useEffect","CssBaseline","Box","Grid","Typography","CircularProgress","styled","NavLink","useNavigate","PlayArrowIcon","Footer","axios","getCookie","removeCookie","API_URL","useAsync","jsx","_jsx","jsxs","_jsxs","MainContent","padding","PlaylistItem","borderRadius","marginBottom","position","opacity","cursor","color","PlaylistImage","width","height","transition","marginRight","PlayIcon","bottom","left","transform","getMusics","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","limit","res","res1","res2","allResData","wrap","_callee$","_context","prev","next","get","concat","sent","console","log","data","_toConsumableArray","abrupt","stop","_x","apply","arguments","Chartmusic","props","navigate","token","verify","_ref2","_callee2","response","_callee2$","_context2","post","headers","Authorization","statusText","t0","alert","getFilteredMusics","kinds","arr","musics","filter","music","includes","kind","_useAsync","_useAsync2","_slicedToArray","state","loading","error","style","textAlign","backgroundColor","display","flexDirection","alignItems","justifyContent","children","variant","gutterBottom","marginTop","background","paddingBottom","container","spacing","map","item","xs","sm","md","src","imageUrl","alt","name","onClick","onMusic","className","fontSize","to","fontWeight","singer","id","paddingTop"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/src/routes/Chart.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport Footer from \"./Footer\";\r\nimport axios from \"axios\";\r\nimport { getCookie, removeCookie } from \"../cookie\";\r\nimport { API_URL } from \"../config/contansts\";\r\nimport useAsync from \"../customHook/useAsync\";\r\n\r\nconst MainContent = styled(\"div\")({\r\n  padding: \"2vw\",\r\n});\r\n\r\nconst PlaylistItem = styled(Box)({\r\n  borderRadius: \"8px\",\r\n  marginBottom: \"20px\",\r\n  position: \"relative\",\r\n  \"&:hover .play-icon\": {\r\n    opacity: 1,\r\n    cursor: \"pointer\",\r\n    color: \"red\",\r\n  },\r\n  \"&:hover img\": {\r\n    opacity: 0.8,\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst PlaylistImage = styled(\"img\")({\r\n  width: \"20%\",\r\n  height: \"10vh\",\r\n  transition: \"opacity 0.3s ease\",\r\n  marginRight: \"1vw\",\r\n});\r\n\r\nconst PlayIcon = styled(PlayArrowIcon)({\r\n  position: \"absolute\",\r\n  bottom: \"5.5%\",\r\n  left: \"9.5%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  opacity: 0,\r\n  transition: \"opacity 0.3s ease\",\r\n});\r\n\r\n//전체곡 조회함수\r\nconst getMusics = async (limit) => {\r\n  const res = await axios.get(`${API_URL}/api/musics/kind?kind=POP&limit=15`);\r\n  const res1 = await axios.get(`${API_URL}/api/musics/kind?kind=한국&limit=15`);\r\n  const res2 = await axios.get(`${API_URL}/api/musics/kind?kind=일본&limit=15`);\r\n  console.log(\"res.data:\", res.data);\r\n  const allResData = [...res.data, ...res1.data, ...res2.data];\r\n  console.log(\"allResData:\", allResData);\r\n  return allResData;\r\n};\r\n\r\nconst Chartmusic = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  // 페이지가 로드될 때 실행되는 useEffect hook.\r\n  useEffect(() => {\r\n    // 사용자의 accessToken을 쿠키에서 가져옴\r\n    const token = getCookie(\"accessToken\");\r\n\r\n    // 토큰이 존재하는 경우, 서버에서 토큰 유효성을 검증함\r\n    const verify = async () => {\r\n      if (token != null) {\r\n        try {\r\n          // 서버에 인증 요청을 보냄\r\n          const response = await axios.post(`${API_URL}/api/verify`, null, {\r\n            headers: {\r\n              Authorization: \"Bearer \" + token,\r\n            },\r\n          });\r\n\r\n          // 서버 응답이 OK일 경우 (토큰이 유효한 경우)\r\n          if (response.statusText === \"OK\") {\r\n            // 토큰이 유효하면 아무 작업도 수행하지 않음\r\n            // 사용자를 현재 페이지에 둠\r\n          }\r\n        } catch (error) {\r\n          // 서버 응답이 OK가 아닐 경우 (토큰이 유효하지 않은 경우)\r\n          // 에러 메시지를 콘솔에 기록\r\n          console.log(error);\r\n\r\n          // 경고창을 띄우고, 쿠키에 저장된 토큰을 제거함\r\n          alert(\"다시 로그인 해주세요\");\r\n          removeCookie(\"accessToken\");\r\n\r\n          // 사용자를 로그인 페이지로 리다이렉트함\r\n          navigate(\"/\");\r\n        }\r\n      } else {\r\n        // 토큰이 없는 경우 (로그인되지 않은 사용자)\r\n        // 경고창을 띄우고, 사용자를 로그인 페이지로 리다이렉트함\r\n        alert(\"다시 로그인 해주세요\");\r\n        navigate(\"/\");\r\n      }\r\n    };\r\n\r\n    // verify 함수 실행 (페이지가 로드될 때마다 실행됨)\r\n    verify();\r\n  }, []); // useEffect의 의존성 배열이 빈 배열이므로 한 번만 실행됨\r\n\r\n  // 특정 음악 장르에 해당하는 음악만 필터링하여 반환하는 함수\r\n  const getFilteredMusics = (kinds) => {\r\n    console.log(\"kind: \", kinds);\r\n    let arr = musics.filter((music) => kinds.includes(music.kind));\r\n    console.log(\"arr: \", arr);\r\n    // 기본적으로는 전체 차트를 보여줌\r\n    return arr;\r\n  };\r\n\r\n  // useAsync 커스텀 훅을 사용하여 음악 데이터를 비동기적으로 가져오는 로직\r\n  const [state] = useAsync(getMusics, []); // getMusics 함수를 사용하여 데이터를 비동기적으로 가져옴\r\n  const { loading, data: musics, error } = state; // state 객체에서 loading, musics, error 값을 구조 분해\r\n\r\n  // 로딩 중일 때는 로딩 메시지를 표시\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          padding: \"20px\",\r\n          color: \"white\",\r\n          backgroundColor: \"#000\",\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          잠시만 기다려주세요...\r\n        </Typography>\r\n        <CircularProgress style={{ marginTop: \"10px\" }} />\r\n      </div>\r\n    );\r\n  }\r\n  // 에러 발생 시 에러 메시지를 표시\r\n  if (error) return <div>에러가 발생했습니다.</div>;\r\n\r\n  // musics가 존재하지 않는 경우 로딩 메시지를 표시\r\n  if (!musics) {\r\n    return <div>로딩중입니다.</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", background: \"black\" }}>\r\n      <CssBaseline />\r\n      <MainContent style={{ color: \"white\" }}>\r\n        <div>\r\n          <h1 style={{ paddingBottom: \"1vw\", color: \"llightseagreen\" }}>\r\n            차트\r\n          </h1>\r\n          <h2 style={{ paddingBottom: \"1vw\", color: \"lightseagreen\" }}>\r\n            K-POP TOP 15\r\n          </h2>\r\n          <Grid container spacing={1}>\r\n            {getFilteredMusics([\r\n              \"한국-발라드\",\r\n              \"한국-힙합\",\r\n              \"한국-트로트\",\r\n              \"한국-동요\",\r\n              \"한국-아이돌\",\r\n            ]).map((music) => (\r\n              <Grid item xs={12} sm={6} md={4} key={music.id}>\r\n                <PlaylistItem\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <PlaylistImage\r\n                    src={`${API_URL}/api${music.imageUrl}`}\r\n                    alt={music.name}\r\n                    onClick={() => {\r\n                      props.onMusic(music);\r\n                    }}\r\n                  />\r\n                  <PlayIcon\r\n                    className=\"play-icon\"\r\n                    fontSize=\"large\"\r\n                    onClick={() => {\r\n                      props.onMusic(music);\r\n                    }}\r\n                  />\r\n                  <NavLink\r\n                    to=\"/login-main/detail\"\r\n                    state={{ music }}\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      <span style={{ fontWeight: \"550\", fontSize: \"22px\" }}>\r\n                        {music.name}\r\n                      </span>\r\n                      <br />\r\n                      <span style={{ fontWeight: \"300\" }}>{music.singer}</span>\r\n                    </Typography>\r\n                  </NavLink>\r\n                </PlaylistItem>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n        <div style={{ paddingTop: \"2vw\" }}>\r\n          <h2 style={{ paddingBottom: \"1vw\", color: \"lightseagreen\" }}>\r\n            BILLBOARD TOP 15\r\n          </h2>\r\n          <Grid container spacing={1}>\r\n            {getFilteredMusics([\r\n              \"POP-솔로\",\r\n              \"POP-힙합\",\r\n              \"POP-락\",\r\n              \"POP-OST\",\r\n              \"POP-밴드\",\r\n            ]).map((music) => (\r\n              <Grid item xs={12} sm={6} md={4} key={music.id}>\r\n                <PlaylistItem\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <PlaylistImage\r\n                    src={`${API_URL}/api${music.imageUrl}`}\r\n                    alt={music.name}\r\n                    onClick={() => {\r\n                      props.onMusic(music);\r\n                    }}\r\n                  />\r\n                  <PlayIcon\r\n                    className=\"play-icon\"\r\n                    fontSize=\"large\"\r\n                    onClick={() => {\r\n                      props.onMusic(music);\r\n                    }}\r\n                  />\r\n                  <NavLink\r\n                    to=\"/login-main/detail\"\r\n                    state={{ music }}\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      <span style={{ fontWeight: \"550\", fontSize: \"22px\" }}>\r\n                        {music.name}\r\n                      </span>\r\n                      <br />\r\n                      <span style={{ fontWeight: \"300\" }}>{music.singer}</span>\r\n                    </Typography>\r\n                  </NavLink>\r\n                </PlaylistItem>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n        <div style={{ paddingTop: \"2vw\" }}>\r\n          <h2 style={{ paddingBottom: \"1vw\", color: \"lightseagreen\" }}>\r\n            J-POP TOP 15\r\n          </h2>\r\n          <Grid container spacing={1}>\r\n            {getFilteredMusics([\r\n              \"일본-아이돌\",\r\n              \"일본-애니\",\r\n              \"일본-가요\",\r\n              \"일본-락\",\r\n            ]).map((music) => (\r\n              <Grid item xs={12} sm={6} md={4} key={music.id}>\r\n                <PlaylistItem\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <PlaylistImage\r\n                    src={`${API_URL}/api${music.imageUrl}`}\r\n                    alt={music.name}\r\n                    onClick={() => {\r\n                      props.onMusic(music);\r\n                    }}\r\n                  />\r\n                  <PlayIcon\r\n                    className=\"play-icon\"\r\n                    fontSize=\"large\"\r\n                    onClick={() => {\r\n                      props.onMusic(music);\r\n                    }}\r\n                  />\r\n                  <NavLink\r\n                    to=\"/login-main/detail\"\r\n                    state={{ music }}\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      <span style={{ fontWeight: \"550\", fontSize: \"22px\" }}>\r\n                        {music.name}\r\n                      </span>\r\n                      <br />\r\n                      <span style={{ fontWeight: \"300\" }}>{music.singer}</span>\r\n                    </Typography>\r\n                  </NavLink>\r\n                </PlaylistItem>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n        <Footer />\r\n      </MainContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chartmusic;\r\n"],"mappings":"ohBAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OACEC,WAAW,CACXC,GAAG,CACHC,IAAI,CACJC,UAAU,CACVC,gBAAgB,KACX,eAAe,CACtB,OAASC,MAAM,KAAQ,aAAa,CACpC,OAASC,OAAO,CAAEC,WAAW,KAAQ,kBAAkB,CACvD,MAAO,CAAAC,aAAa,KAAM,+BAA+B,CACzD,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,YAAY,KAAQ,WAAW,CACnD,OAASC,OAAO,KAAQ,qBAAqB,CAC7C,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9C,GAAM,CAAAC,WAAW,CAAGd,MAAM,CAAC,KAAK,CAAC,CAAC,CAChCe,OAAO,CAAE,KACX,CAAC,CAAC,CAEF,GAAM,CAAAC,YAAY,CAAGhB,MAAM,CAACJ,GAAG,CAAC,CAAC,CAC/BqB,YAAY,CAAE,KAAK,CACnBC,YAAY,CAAE,MAAM,CACpBC,QAAQ,CAAE,UAAU,CACpB,oBAAoB,CAAE,CACpBC,OAAO,CAAE,CAAC,CACVC,MAAM,CAAE,SAAS,CACjBC,KAAK,CAAE,KACT,CAAC,CACD,aAAa,CAAE,CACbF,OAAO,CAAE,GAAG,CACZC,MAAM,CAAE,SACV,CACF,CAAC,CAAC,CAEF,GAAM,CAAAE,aAAa,CAAGvB,MAAM,CAAC,KAAK,CAAC,CAAC,CAClCwB,KAAK,CAAE,KAAK,CACZC,MAAM,CAAE,MAAM,CACdC,UAAU,CAAE,mBAAmB,CAC/BC,WAAW,CAAE,KACf,CAAC,CAAC,CAEF,GAAM,CAAAC,QAAQ,CAAG5B,MAAM,CAACG,aAAa,CAAC,CAAC,CACrCgB,QAAQ,CAAE,UAAU,CACpBU,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,MAAM,CACZC,SAAS,CAAE,uBAAuB,CAClCX,OAAO,CAAE,CAAC,CACVM,UAAU,CAAE,mBACd,CAAC,CAAC,CAEF;AACA,GAAM,CAAAM,SAAS,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,KAAK,MAAAC,GAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,UAAA,QAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACV,CAAA1C,KAAK,CAAC2C,GAAG,IAAAC,MAAA,CAAIzC,OAAO,sCAAoC,CAAC,QAArE+B,GAAG,CAAAM,QAAA,CAAAK,IAAA,CAAAL,QAAA,CAAAE,IAAA,SACU,CAAA1C,KAAK,CAAC2C,GAAG,IAAAC,MAAA,CAAIzC,OAAO,+CAAmC,CAAC,QAArEgC,IAAI,CAAAK,QAAA,CAAAK,IAAA,CAAAL,QAAA,CAAAE,IAAA,SACS,CAAA1C,KAAK,CAAC2C,GAAG,IAAAC,MAAA,CAAIzC,OAAO,+CAAmC,CAAC,QAArEiC,IAAI,CAAAI,QAAA,CAAAK,IAAA,CACVC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAEb,GAAG,CAACc,IAAI,CAAC,CAC5BX,UAAU,IAAAO,MAAA,CAAAK,kBAAA,CAAOf,GAAG,CAACc,IAAI,EAAAC,kBAAA,CAAKd,IAAI,CAACa,IAAI,EAAAC,kBAAA,CAAKb,IAAI,CAACY,IAAI,GAC3DF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEV,UAAU,CAAC,CAAC,OAAAG,QAAA,CAAAU,MAAA,UAChCb,UAAU,2BAAAG,QAAA,CAAAW,IAAA,MAAAnB,OAAA,GAClB,kBARK,CAAAL,SAASA,CAAAyB,EAAA,SAAAxB,IAAA,CAAAyB,KAAA,MAAAC,SAAA,OAQd,CAED,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAK,CAC5B,GAAM,CAAAC,QAAQ,CAAG5D,WAAW,CAAC,CAAC,CAE9B;AACAR,SAAS,CAAC,UAAM,CACd;AACA,GAAM,CAAAqE,KAAK,CAAGzD,SAAS,CAAC,aAAa,CAAC,CAEtC;AACA,GAAM,CAAA0D,MAAM,6BAAAC,KAAA,CAAA/B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA8B,SAAA,MAAAC,QAAA,QAAAhC,mBAAA,GAAAQ,IAAA,UAAAyB,UAAAC,SAAA,iBAAAA,SAAA,CAAAvB,IAAA,CAAAuB,SAAA,CAAAtB,IAAA,cACTgB,KAAK,EAAI,IAAI,GAAAM,SAAA,CAAAtB,IAAA,WAAAsB,SAAA,CAAAvB,IAAA,GAAAuB,SAAA,CAAAtB,IAAA,SAGU,CAAA1C,KAAK,CAACiE,IAAI,IAAArB,MAAA,CAAIzC,OAAO,gBAAe,IAAI,CAAE,CAC/D+D,OAAO,CAAE,CACPC,aAAa,CAAE,SAAS,CAAGT,KAC7B,CACF,CAAC,CAAC,QAJII,QAAQ,CAAAE,SAAA,CAAAnB,IAAA,CAMd;AACA,GAAIiB,QAAQ,CAACM,UAAU,GAAK,IAAI,CAAE,CAChC;AACA;AAAA,CACDJ,SAAA,CAAAtB,IAAA,iBAAAsB,SAAA,CAAAvB,IAAA,GAAAuB,SAAA,CAAAK,EAAA,CAAAL,SAAA,aAED;AACA;AACAlB,OAAO,CAACC,GAAG,CAAAiB,SAAA,CAAAK,EAAM,CAAC,CAElB;AACAC,KAAK,CAAC,aAAa,CAAC,CACpBpE,YAAY,CAAC,aAAa,CAAC,CAE3B;AACAuD,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAAO,SAAA,CAAAtB,IAAA,kBAGhB;AACA;AACA4B,KAAK,CAAC,aAAa,CAAC,CACpBb,QAAQ,CAAC,GAAG,CAAC,CAAC,yBAAAO,SAAA,CAAAb,IAAA,MAAAU,QAAA,gBAEjB,kBAjCK,CAAAF,MAAMA,CAAA,SAAAC,KAAA,CAAAP,KAAA,MAAAC,SAAA,OAiCX,CAED;AACAK,MAAM,CAAC,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAAE;AAER;AACA,GAAM,CAAAY,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,KAAK,CAAK,CACnC1B,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEyB,KAAK,CAAC,CAC5B,GAAI,CAAAC,GAAG,CAAGC,MAAM,CAACC,MAAM,CAAC,SAACC,KAAK,QAAK,CAAAJ,KAAK,CAACK,QAAQ,CAACD,KAAK,CAACE,IAAI,CAAC,GAAC,CAC9DhC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAE0B,GAAG,CAAC,CACzB;AACA,MAAO,CAAAA,GAAG,CACZ,CAAC,CAED;AACA,IAAAM,SAAA,CAAgB3E,QAAQ,CAACuB,SAAS,CAAE,EAAE,CAAC,CAAAqD,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAhCG,KAAK,CAAAF,UAAA,IAA6B;AACzC,GAAQ,CAAAG,OAAO,CAA0BD,KAAK,CAAtCC,OAAO,CAAQT,MAAM,CAAYQ,KAAK,CAA7BlC,IAAI,CAAUoC,KAAK,CAAKF,KAAK,CAAfE,KAAK,CAAY;AAEhD;AACA,GAAID,OAAO,CAAE,CACX,mBACE3E,KAAA,QACE6E,KAAK,CAAE,CACLC,SAAS,CAAE,QAAQ,CACnB5E,OAAO,CAAE,MAAM,CACfO,KAAK,CAAE,OAAO,CACdsE,eAAe,CAAE,MAAM,CACvBnE,MAAM,CAAE,OAAO,CACfoE,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAClB,CAAE,CAAAC,QAAA,eAEFtF,IAAA,CAACb,UAAU,EAACoG,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,4DAEtC,CAAY,CAAC,cACbtF,IAAA,CAACZ,gBAAgB,EAAC2F,KAAK,CAAE,CAAEU,SAAS,CAAE,MAAO,CAAE,CAAE,CAAC,EAC/C,CAAC,CAEV,CACA;AACA,GAAIX,KAAK,CAAE,mBAAO9E,IAAA,QAAAsF,QAAA,CAAK,0DAAW,CAAK,CAAC,CAExC;AACA,GAAI,CAAClB,MAAM,CAAE,CACX,mBAAOpE,IAAA,QAAAsF,QAAA,CAAK,uCAAO,CAAK,CAAC,CAC3B,CAEA,mBACEpF,KAAA,QAAK6E,KAAK,CAAE,CAAEG,OAAO,CAAE,MAAM,CAAEQ,UAAU,CAAE,OAAQ,CAAE,CAAAJ,QAAA,eACnDtF,IAAA,CAAChB,WAAW,GAAE,CAAC,cACfkB,KAAA,CAACC,WAAW,EAAC4E,KAAK,CAAE,CAAEpE,KAAK,CAAE,OAAQ,CAAE,CAAA2E,QAAA,eACrCpF,KAAA,QAAAoF,QAAA,eACEtF,IAAA,OAAI+E,KAAK,CAAE,CAAEY,aAAa,CAAE,KAAK,CAAEhF,KAAK,CAAE,gBAAiB,CAAE,CAAA2E,QAAA,CAAC,cAE9D,CAAI,CAAC,cACLtF,IAAA,OAAI+E,KAAK,CAAE,CAAEY,aAAa,CAAE,KAAK,CAAEhF,KAAK,CAAE,eAAgB,CAAE,CAAA2E,QAAA,CAAC,cAE7D,CAAI,CAAC,cACLtF,IAAA,CAACd,IAAI,EAAC0G,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAP,QAAA,CACxBrB,iBAAiB,CAAC,CACjB,QAAQ,CACR,OAAO,CACP,QAAQ,CACR,OAAO,CACP,QAAQ,CACT,CAAC,CAAC6B,GAAG,CAAC,SAACxB,KAAK,qBACXtE,IAAA,CAACd,IAAI,EAAC6G,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAZ,QAAA,cAC9BpF,KAAA,CAACG,YAAY,EACX0E,KAAK,CAAE,CACLG,OAAO,CAAE,MAAM,CACfE,UAAU,CAAE,QAAQ,CACpBzE,KAAK,CAAE,OACT,CAAE,CAAA2E,QAAA,eAEFtF,IAAA,CAACY,aAAa,EACZuF,GAAG,IAAA7D,MAAA,CAAKzC,OAAO,SAAAyC,MAAA,CAAOgC,KAAK,CAAC8B,QAAQ,CAAG,CACvCC,GAAG,CAAE/B,KAAK,CAACgC,IAAK,CAChBC,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbrD,KAAK,CAACsD,OAAO,CAAClC,KAAK,CAAC,CACtB,CAAE,CACH,CAAC,cACFtE,IAAA,CAACiB,QAAQ,EACPwF,SAAS,CAAC,WAAW,CACrBC,QAAQ,CAAC,OAAO,CAChBH,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbrD,KAAK,CAACsD,OAAO,CAAClC,KAAK,CAAC,CACtB,CAAE,CACH,CAAC,cACFtE,IAAA,CAACV,OAAO,EACNqH,EAAE,CAAC,oBAAoB,CACvB/B,KAAK,CAAE,CAAEN,KAAK,CAALA,KAAM,CAAE,CACjBS,KAAK,CAAE,CAAEpE,KAAK,CAAE,OAAQ,CAAE,CAAA2E,QAAA,cAE1BpF,KAAA,CAACf,UAAU,EAACoG,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAF,QAAA,eAC1CtF,IAAA,SAAM+E,KAAK,CAAE,CAAE6B,UAAU,CAAE,KAAK,CAAEF,QAAQ,CAAE,MAAO,CAAE,CAAApB,QAAA,CAClDhB,KAAK,CAACgC,IAAI,CACP,CAAC,cACPtG,IAAA,QAAK,CAAC,cACNA,IAAA,SAAM+E,KAAK,CAAE,CAAE6B,UAAU,CAAE,KAAM,CAAE,CAAAtB,QAAA,CAAEhB,KAAK,CAACuC,MAAM,CAAO,CAAC,EAC/C,CAAC,CACN,CAAC,EACE,CAAC,EAnCqBvC,KAAK,CAACwC,EAoCtC,CAAC,EACR,CAAC,CACE,CAAC,EACJ,CAAC,cACN5G,KAAA,QAAK6E,KAAK,CAAE,CAAEgC,UAAU,CAAE,KAAM,CAAE,CAAAzB,QAAA,eAChCtF,IAAA,OAAI+E,KAAK,CAAE,CAAEY,aAAa,CAAE,KAAK,CAAEhF,KAAK,CAAE,eAAgB,CAAE,CAAA2E,QAAA,CAAC,kBAE7D,CAAI,CAAC,cACLtF,IAAA,CAACd,IAAI,EAAC0G,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAP,QAAA,CACxBrB,iBAAiB,CAAC,CACjB,QAAQ,CACR,QAAQ,CACR,OAAO,CACP,SAAS,CACT,QAAQ,CACT,CAAC,CAAC6B,GAAG,CAAC,SAACxB,KAAK,qBACXtE,IAAA,CAACd,IAAI,EAAC6G,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAZ,QAAA,cAC9BpF,KAAA,CAACG,YAAY,EACX0E,KAAK,CAAE,CACLG,OAAO,CAAE,MAAM,CACfE,UAAU,CAAE,QAAQ,CACpBzE,KAAK,CAAE,OACT,CAAE,CAAA2E,QAAA,eAEFtF,IAAA,CAACY,aAAa,EACZuF,GAAG,IAAA7D,MAAA,CAAKzC,OAAO,SAAAyC,MAAA,CAAOgC,KAAK,CAAC8B,QAAQ,CAAG,CACvCC,GAAG,CAAE/B,KAAK,CAACgC,IAAK,CAChBC,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbrD,KAAK,CAACsD,OAAO,CAAClC,KAAK,CAAC,CACtB,CAAE,CACH,CAAC,cACFtE,IAAA,CAACiB,QAAQ,EACPwF,SAAS,CAAC,WAAW,CACrBC,QAAQ,CAAC,OAAO,CAChBH,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbrD,KAAK,CAACsD,OAAO,CAAClC,KAAK,CAAC,CACtB,CAAE,CACH,CAAC,cACFtE,IAAA,CAACV,OAAO,EACNqH,EAAE,CAAC,oBAAoB,CACvB/B,KAAK,CAAE,CAAEN,KAAK,CAALA,KAAM,CAAE,CACjBS,KAAK,CAAE,CAAEpE,KAAK,CAAE,OAAQ,CAAE,CAAA2E,QAAA,cAE1BpF,KAAA,CAACf,UAAU,EAACoG,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAF,QAAA,eAC1CtF,IAAA,SAAM+E,KAAK,CAAE,CAAE6B,UAAU,CAAE,KAAK,CAAEF,QAAQ,CAAE,MAAO,CAAE,CAAApB,QAAA,CAClDhB,KAAK,CAACgC,IAAI,CACP,CAAC,cACPtG,IAAA,QAAK,CAAC,cACNA,IAAA,SAAM+E,KAAK,CAAE,CAAE6B,UAAU,CAAE,KAAM,CAAE,CAAAtB,QAAA,CAAEhB,KAAK,CAACuC,MAAM,CAAO,CAAC,EAC/C,CAAC,CACN,CAAC,EACE,CAAC,EAnCqBvC,KAAK,CAACwC,EAoCtC,CAAC,EACR,CAAC,CACE,CAAC,EACJ,CAAC,cACN5G,KAAA,QAAK6E,KAAK,CAAE,CAAEgC,UAAU,CAAE,KAAM,CAAE,CAAAzB,QAAA,eAChCtF,IAAA,OAAI+E,KAAK,CAAE,CAAEY,aAAa,CAAE,KAAK,CAAEhF,KAAK,CAAE,eAAgB,CAAE,CAAA2E,QAAA,CAAC,cAE7D,CAAI,CAAC,cACLtF,IAAA,CAACd,IAAI,EAAC0G,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAP,QAAA,CACxBrB,iBAAiB,CAAC,CACjB,QAAQ,CACR,OAAO,CACP,OAAO,CACP,MAAM,CACP,CAAC,CAAC6B,GAAG,CAAC,SAACxB,KAAK,qBACXtE,IAAA,CAACd,IAAI,EAAC6G,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAZ,QAAA,cAC9BpF,KAAA,CAACG,YAAY,EACX0E,KAAK,CAAE,CACLG,OAAO,CAAE,MAAM,CACfE,UAAU,CAAE,QAAQ,CACpBzE,KAAK,CAAE,OACT,CAAE,CAAA2E,QAAA,eAEFtF,IAAA,CAACY,aAAa,EACZuF,GAAG,IAAA7D,MAAA,CAAKzC,OAAO,SAAAyC,MAAA,CAAOgC,KAAK,CAAC8B,QAAQ,CAAG,CACvCC,GAAG,CAAE/B,KAAK,CAACgC,IAAK,CAChBC,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbrD,KAAK,CAACsD,OAAO,CAAClC,KAAK,CAAC,CACtB,CAAE,CACH,CAAC,cACFtE,IAAA,CAACiB,QAAQ,EACPwF,SAAS,CAAC,WAAW,CACrBC,QAAQ,CAAC,OAAO,CAChBH,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbrD,KAAK,CAACsD,OAAO,CAAClC,KAAK,CAAC,CACtB,CAAE,CACH,CAAC,cACFtE,IAAA,CAACV,OAAO,EACNqH,EAAE,CAAC,oBAAoB,CACvB/B,KAAK,CAAE,CAAEN,KAAK,CAALA,KAAM,CAAE,CACjBS,KAAK,CAAE,CAAEpE,KAAK,CAAE,OAAQ,CAAE,CAAA2E,QAAA,cAE1BpF,KAAA,CAACf,UAAU,EAACoG,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAF,QAAA,eAC1CtF,IAAA,SAAM+E,KAAK,CAAE,CAAE6B,UAAU,CAAE,KAAK,CAAEF,QAAQ,CAAE,MAAO,CAAE,CAAApB,QAAA,CAClDhB,KAAK,CAACgC,IAAI,CACP,CAAC,cACPtG,IAAA,QAAK,CAAC,cACNA,IAAA,SAAM+E,KAAK,CAAE,CAAE6B,UAAU,CAAE,KAAM,CAAE,CAAAtB,QAAA,CAAEhB,KAAK,CAACuC,MAAM,CAAO,CAAC,EAC/C,CAAC,CACN,CAAC,EACE,CAAC,EAnCqBvC,KAAK,CAACwC,EAoCtC,CAAC,EACR,CAAC,CACE,CAAC,EACJ,CAAC,cACN9G,IAAA,CAACP,MAAM,GAAE,CAAC,EACC,CAAC,EACX,CAAC,CAEV,CAAC,CAED,cAAe,CAAAwD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}