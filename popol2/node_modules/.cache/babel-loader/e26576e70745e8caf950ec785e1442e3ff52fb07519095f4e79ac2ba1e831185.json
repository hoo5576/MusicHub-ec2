{"ast":null,"code":"import _slicedToArray from\"C:/Users/user/Desktop/MusicHub-ec2/popol2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Routes,Route,useLocation}from'react-router-dom';import Listb from\"./Listbar.js\";import EditProfile from'./EditProfile.js';import MembershipManagement from'./Membershipmang';import MusicDetail from'./MusicDetail';import Dj from'./Dj.js';import Chart from'./Chart.js';import Monthmusic from'./Monthmusic.js';import Newchart from'./Newchart.js';import Video from'./Video.js';import Playlist from'./Playlist';import Mypage from'./Mypage';import Musics from'./Musics';import CustomAudioPlayer from'./Audio.js';import UpLoader from'./UpLoader.js';import{API_URL}from'../config/contansts.js';import'../scss/LoginMain.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginMain=function LoginMain(){var location=useLocation();var hidePages=['/login-main/uploader','/login-main/video'];var Hide=hidePages.includes(location.pathname);var _useState=useState([{name:\"오늘 뭐 듣지?\",writer:\"재생 버튼을 클릭해보세요\",img:\"\".concat(API_URL,\"/images/defaultMusicImg.png\"),src:\"\".concat(API_URL,\"/api/upload/music/RoieShpigler-Aluminum.mp3\"),id:1}]),_useState2=_slicedToArray(_useState,2),playList=_useState2[0],setPlayList=_useState2[1];// 음악을 클릭했을 때 재생목록에 추가하는 함수\nvar onMusic=function onMusic(music){// e.preventDefault();\n// console.log(e.target.value);\nconsole.log(music);setPlayList([{name:music.name,writer:music.singer,img:API_URL+'/api'+music.imageUrl,src:API_URL+'/api'+music.musicUrl,musicId:music.id,id:1}]);};// 음악을 클릭했을 때 재생목록에 추가하는 함수\nvar onPlaylist=function onPlaylist(musics){if(musics==null){return;}var playlist=[];musics.map(function(music,index){playlist.push({name:music.name,writer:music.singer,img:API_URL+'/api'+music.imageUrl,src:API_URL+'/api'+music.musicUrl,musicId:music.id,id:index+1});});console.log(\"playlist: \",playlist);setPlayList(playlist);};return/*#__PURE__*/_jsxs(\"div\",{id:\"loginMain\",children:[/*#__PURE__*/_jsx(Listb,{id:\"Listb\"}),/*#__PURE__*/_jsx(\"div\",{id:\"loginMain-content\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/playlist\",element:/*#__PURE__*/_jsx(Playlist,{onMusic:onMusic})}),/*#__PURE__*/_jsx(Route,{path:\"/user/mypage\",element:/*#__PURE__*/_jsx(Mypage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/edit\",element:/*#__PURE__*/_jsx(EditProfile,{})}),/*#__PURE__*/_jsx(Route,{path:\"/member\",element:/*#__PURE__*/_jsx(MembershipManagement,{})}),/*#__PURE__*/_jsx(Route,{path:\"/musics\",element:/*#__PURE__*/_jsx(Musics,{onMusic:onMusic})}),/*#__PURE__*/_jsx(Route,{path:\"/detail\",element:/*#__PURE__*/_jsx(MusicDetail,{onMusic:onMusic})}),/*#__PURE__*/_jsx(Route,{path:\"/dj\",element:/*#__PURE__*/_jsx(Dj,{onMusic:onMusic,onPlaylist:onPlaylist})}),/*#__PURE__*/_jsx(Route,{path:\"/month\",element:/*#__PURE__*/_jsx(Monthmusic,{onMusic:onMusic})}),/*#__PURE__*/_jsx(Route,{path:\"/chart\",element:/*#__PURE__*/_jsx(Chart,{onMusic:onMusic})}),/*#__PURE__*/_jsx(Route,{path:\"/new\",element:/*#__PURE__*/_jsx(Newchart,{onMusic:onMusic})}),/*#__PURE__*/_jsx(Route,{path:\"/video\",element:/*#__PURE__*/_jsx(Video,{onMusic:onMusic})}),/*#__PURE__*/_jsx(Route,{path:\"/uploader\",element:/*#__PURE__*/_jsx(UpLoader,{})})]})}),!Hide&&/*#__PURE__*/_jsx(CustomAudioPlayer,{playList:playList})]});};export default LoginMain;","map":{"version":3,"names":["React","useState","Routes","Route","useLocation","Listb","EditProfile","MembershipManagement","MusicDetail","Dj","Chart","Monthmusic","Newchart","Video","Playlist","Mypage","Musics","CustomAudioPlayer","UpLoader","API_URL","jsx","_jsx","jsxs","_jsxs","LoginMain","location","hidePages","Hide","includes","pathname","_useState","name","writer","img","concat","src","id","_useState2","_slicedToArray","playList","setPlayList","onMusic","music","console","log","singer","imageUrl","musicUrl","musicId","onPlaylist","musics","playlist","map","index","push","children","path","element"],"sources":["C:/Users/user/Desktop/MusicHub-ec2/popol2/src/routes/LoginMain.js"],"sourcesContent":["import React, {useState } from 'react';\r\nimport { Routes, Route, useLocation} from 'react-router-dom';\r\nimport Listb from \"./Listbar.js\";\r\nimport EditProfile from './EditProfile.js';\r\nimport MembershipManagement from './Membershipmang';\r\nimport MusicDetail from './MusicDetail'\r\nimport Dj from './Dj.js';\r\nimport Chart from './Chart.js';\r\nimport Monthmusic from './Monthmusic.js';\r\nimport Newchart from './Newchart.js';\r\nimport Video from './Video.js';\r\nimport Playlist from './Playlist';\r\nimport Mypage from './Mypage';\r\nimport Musics from './Musics';\r\nimport CustomAudioPlayer from './Audio.js';\r\nimport UpLoader from './UpLoader.js';\r\nimport { API_URL } from '../config/contansts.js';\r\nimport '../scss/LoginMain.scss';\r\n\r\nconst LoginMain = () => {\r\n  const location = useLocation();\r\n  const hidePages = ['/login-main/uploader', '/login-main/video'];\r\n  const Hide = hidePages.includes(location.pathname);\r\n\r\n  const [playList, setPlayList] = useState([\r\n    {\r\n      name: \"오늘 뭐 듣지?\",\r\n      writer: \"재생 버튼을 클릭해보세요\",\r\n      img: `${API_URL}/images/defaultMusicImg.png`,\r\n      src: `${API_URL}/api/upload/music/RoieShpigler-Aluminum.mp3`,\r\n      id: 1,\r\n    },\r\n  ]);\r\n\r\n  // 음악을 클릭했을 때 재생목록에 추가하는 함수\r\n  const onMusic = (music) => {\r\n    // e.preventDefault();\r\n    // console.log(e.target.value);\r\n    console.log(music);\r\n    setPlayList([\r\n      {\r\n        name: music.name,\r\n        writer: music.singer,\r\n        img: API_URL+ '/api' +music.imageUrl,\r\n        src: API_URL+ '/api' +music.musicUrl,\r\n        musicId: music.id,\r\n        id: 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // 음악을 클릭했을 때 재생목록에 추가하는 함수\r\n  const onPlaylist = (musics) => {\r\n    if(musics == null){\r\n      return\r\n    }\r\n    \r\n    const playlist = []\r\n    musics.map((music, index) => {\r\n      playlist.push(\r\n        {\r\n          name: music.name,\r\n          writer: music.singer,\r\n          img: API_URL+ '/api' +music.imageUrl,\r\n          src: API_URL+ '/api' +music.musicUrl,\r\n          musicId: music.id,\r\n          id: index+1,\r\n        }\r\n      )\r\n    })\r\n    console.log(\"playlist: \", playlist);\r\n    setPlayList(playlist);\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginMain\">\r\n      <Listb id='Listb'/>\r\n      <div id='loginMain-content'>\r\n        <Routes>\r\n          <Route path=\"/playlist\" element={<Playlist onMusic={onMusic} />} />\r\n          <Route path=\"/user/mypage\" element={<Mypage />} />\r\n          <Route path=\"/edit\" element={<EditProfile />} />\r\n          <Route path=\"/member\" element={<MembershipManagement />} />\r\n          <Route path=\"/musics\" element={<Musics onMusic={onMusic} />} />\r\n          <Route path=\"/detail\" element={<MusicDetail onMusic={onMusic} />} />\r\n          <Route path=\"/dj\" element={<Dj onMusic={onMusic} onPlaylist={onPlaylist} />} />\r\n          <Route path=\"/month\" element={<Monthmusic onMusic={onMusic} />} />\r\n          <Route path=\"/chart\" element={<Chart onMusic={onMusic} />} />\r\n          <Route path='/new' element={<Newchart onMusic={onMusic} />} />\r\n          <Route path='/video' element={<Video onMusic={onMusic} />} />\r\n          <Route path=\"/uploader\" element={<UpLoader />} />\r\n        </Routes>\r\n      </div>\r\n      {!Hide &&  <CustomAudioPlayer playList={playList} />}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default LoginMain;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}